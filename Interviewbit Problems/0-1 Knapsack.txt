int Solution::solve(vector<int> &A, vector<int> &B, int C) {
    int n = A.size(), i, j;
    vector<vector<int>> dp(2, vector<int> (C + 1, 0));

    for (i = n - 1; i >= 0; i--) {
        for (j = 0; j <= C; j++) {
            if (j - B[i] >= 0)
                dp[i%2][j] = max(A[i] + dp[(i + 1)%2][j - B[i]], dp[i%2][j]);
            dp[i%2][j] = max(dp[i%2][j], dp[(i + 1)%2][j]);
        }
    }

    return dp[0%2][C];
}
