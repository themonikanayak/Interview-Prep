/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if (!root) 
            return {};
        
        queue<Node*> q;
        q.push(root);
        
        vector<vector<int>> res;
        
        while (!q.empty()) {
            
            res.emplace_back();
            int t = q.size();
            
            for (int i = 0; i < t; i++) {
                Node* curr = q.front(); 
                q.pop();
                
                res.back().push_back(curr->val);
                
                for (const auto& child : curr->children) {
                    q.push(child);
                }
            }
        }
        
        return res;
    }
};