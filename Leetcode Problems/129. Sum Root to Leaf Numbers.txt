/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void sumNumbersHelper(TreeNode* root, int& curr_sum, int& total_sum) {
        if(!root) return;
        
        curr_sum *= 10;
        curr_sum += root->val;
        
        // Add the curr_sum to total_sum if it's a leaf node.
        if(!(root->left) && !(root->right)) {
            total_sum += curr_sum;
        }
        else {
            sumNumbersHelper(root->left, curr_sum, total_sum);
            sumNumbersHelper(root->right, curr_sum, total_sum);
        }
        
        curr_sum /= 10;
    }
    
    int sumNumbers(TreeNode* root) {
        int curr_sum = 0, total_sum = 0;
        sumNumbersHelper(root, curr_sum, total_sum);
        
        return total_sum;
    }
};