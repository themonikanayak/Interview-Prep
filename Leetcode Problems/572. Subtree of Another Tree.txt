/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isIdentical(TreeNode* s, TreeNode* t) {
        if (!s && !t) return true;
        
        if(!s || !t) return false;
        
        return (s->val == t->val && isIdentical(s->left,t->left) && 
            isIdentical(s->right,t->right));
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if (!subRoot) return true;
        
        if (!root) return false;
        
        if (isIdentical(root, subRoot)) return true;
        
        if ((root->left && isSubtree(root->left, subRoot)) ||
           (root->right && isSubtree(root->right, subRoot))) return true;
        
        return false;
    }
};