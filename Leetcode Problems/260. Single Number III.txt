class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        long long xxory=0,n=nums.size();
        
        //compute the xor of the two elements occuring only once
        for(int i=0;i<n;i++){
            xxory ^=nums[i];
        }
        
        //compute the mask
        long long mask = (xxory)&(~(xxory-1));
        
        //divide the nums elements into two groups
        int xorg1=0,xorg2=0;
        for(long long int i=0;i<n;i++){
            //test the ith bit using mask
            if(nums[i]&mask){
                xorg1 ^=nums[i];
            }
            else{
                xorg2 ^=nums[i];
            }
        }
        vector<int> ans;
        ans.push_back(xorg1);
        ans.push_back(xorg2);
        return ans;
    }
};