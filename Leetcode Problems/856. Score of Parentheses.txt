class Solution {
public:
    int scoreOfParentheses(string s) {
        stack<string> st;
        int n = s.size();
        
        for (int i = 0; i < n; i++) {
            string temp; temp += s[i];
            if (s[i] == '(') st.push(temp);
            else {
                if (st.top() == "(") {
                    st.pop();
                    int t = 1;
                    while (!st.empty() && st.top() != "(" && st.top() != ")") {
                        t += stoi(st.top());
                        st.pop();
                    }
                    st.push(to_string(t));
                } 
                else {
                    int t = stoi(st.top());
                    st.pop();
                    st.pop();
                    st.push(to_string(t*2));
                    t = 0;
                    while (!st.empty() && st.top() != "(" && st.top() != ")") {
                        t += stoi(st.top());
                        st.pop();
                    }
                    st.push(to_string(t));
                }
            }
        }
        
        return stoi(st.top());
    }
};