class Solution {
public:
    bool wordBreakHelper(int i, string s, set<string>& wordDict, vector<int>& dp) {
        if (i == s.size()) 
            return true;
        
        if (dp[i] != -1) 
            return dp[i];
        
        string temp;
        
        for (int j = i; j < s.size(); j++) {
            temp += s[j];
            
            if (wordDict.find(temp) != wordDict.end()) {
                if (wordBreakHelper(j + 1, s, wordDict, dp)) 
                    return dp[i] = 1;
            }
        }
        
        return dp[i] = 0;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        vector<int> dp(s.size(), -1);
        set<string> st(wordDict.begin(), wordDict.end());
        
        return wordBreakHelper(0, s, st, dp);
    }
};