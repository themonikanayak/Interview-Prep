class Solution {
public:
    int minDistance(string word1, string word2) {
        int m = word1.size(), n = word2.size(), i, j;
        vector<vector<int>> dp(2, vector<int> (n + 1, n + m));
        
        for (i = 0; i <= n; i++) 
            dp[0%2][i] = i;
        
        for (i = 1; i <= m; i++) {
            dp[i%2][0] = i;
            for (j = 1; j <= n; j++) {
                if (word1[i - 1] == word2[j - 1])
                    dp[i%2][j] = dp[(i - 1)%2][j - 1];
                else {
                    dp[i%2][j] = 1 + min(min(dp[i%2][j - 1], dp[(i - 1)%2][j]),
                                         dp[(i - 1)%2][j - 1]);
                }
            }
        }
        
        return dp[m%2][n];
    }
};