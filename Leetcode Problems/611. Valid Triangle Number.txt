class Solution {
public:
    int f(vector<int>& nums, int N, int X, int i)
    {
        int low = i, high = N, mid;

        while (low < high) {
            mid = low + (high - low) / 2;

            if (X <= nums[mid]) {
                high = mid;
            }
            else {
                low = mid + 1;
            }
        }
        if(low < N && nums[low] < X) {
           low++;
        }
        return low;
    }
    
    int triangleNumber(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        int ans = 0, n = nums.size(), x = 0, y = 0;
        
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                x = nums[i] + nums[j];               
                y = f(nums, n, x, j + 1);
                ans += (y - j - 1);
            }
        }
        return ans;
    }
};