class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int n = nums.size(), i, j;
        vector<vector<int>> dp(2, vector<int> (2001, 0));
        
        dp[n%2][1000] = 1;
        
        for (i = n - 1; i >= 0; i--) {
            for (j = -1000; j < 1001; j++) {
                // Two cases.
                // 1. Assign a +ve sign.
                dp[i%2][j + 1000] = 0;
                if (j - nums[i] + 1000 >= 0)
                    dp[i%2][j + 1000] += dp[(i + 1)%2][j - nums[i] + 1000];
                
                // 2. Assign a -ve sign.
                if (j + nums[i] + 1000 < 2001) 
                    dp[i%2][j + 1000] += dp[(i + 1)%2][j + nums[i] + 1000];
            }
        }
        
        return dp[0%2][target + 1000];
    }
};